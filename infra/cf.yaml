Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: The environment.
  AdminPassword:
    Type: String
    Description: The administrator password to be stored in secrets manager


Resources:
  ###############################
  #                             #
  #  DYNAMODB TABLE DEFINITION  #
  #                             #
  ###############################

  # Profiles table
  ProfilesTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: email
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: email
          KeyType: HASH
      TableName: 
        Fn::Join: [-, [foodlose-profiles, !Ref Env]]
      Tags: 
        - Key: project
          Value: 
            Fn::Join: [-, [Foodlose, !Ref Env]]

  # records table
  RecordsTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: user
          AttributeType: S
        - AttributeName: record_date
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: user
          KeyType: HASH
        - AttributeName: record_date
          KeyType: RANGE
      TableName: 
        Fn::Join: [-, [foodlose-records, !Ref Env]]
      Tags: 
        - Key: project
          Value: 
            Fn::Join: [-, [Foodlose, !Ref Env]]
  
  # Posts table
  PostsTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: partition
          AttributeType: S
        - AttributeName: post_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: partition
          KeyType: HASH
        - AttributeName: post_id
          KeyType: RANGE
      TableName: 
        Fn::Join: [-, [foodlose-posts, !Ref Env]]
      Tags: 
        - Key: project
          Value: 
            Fn::Join: [-, [Foodlose, !Ref Env]]

  ###########################
  #                         #
  #  ADMIN PASSWORD SECRET  #
  #                         #
  ###########################

  AdminPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: The admin password for the Foodlose application
      Name: 
        Fn::Join: [-, [foodlose-secret, !Ref Env]]
      SecretString: 
        !Ref AdminPassword
      Tags: 
        - Key: project
          Value: 
            Fn::Join: [-, [Foodlose, !Ref Env]]

  ################
  #              #
  #  SNS Topics  #
  #              #
  ################

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseProfileCreated, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseRecordCreated, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodlosePostCreated, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseGetPost, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseGetProfile, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseGetRecords, !Ref Env]]

  Type: AWS::SNS::Topic
  Properties: 
    TopicName: Fn::Join: [-, [FoodloseContact, !Ref Env]]


Outputs:
  StackName:
    Description: The name of the stack 
    Value: !Sub "${AWS::StackName}"
  RecordsTableName: 
    Description: Records DynamoDB Table name
    Value: !Ref RecordsTable
    Export:
      Name: !Sub "${AWS::StackName}-RecordsTableName"